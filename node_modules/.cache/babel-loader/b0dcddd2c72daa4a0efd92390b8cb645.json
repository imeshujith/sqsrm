{"ast":null,"code":"var _jsxFileName = \"D:\\\\sqsrm_frontend\\\\src\\\\component\\\\drawing-tool\\\\DrawingTool.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./drawing-tool.css\";\nconst colors = {\n  1: \"#0277bd\",\n  2: \"#00796b\",\n  3: \"#d32f2f\",\n  4: \"#ffb74d\",\n  5: \"#ab47bc\"\n};\nconst mergePoint = \"#102027\";\nconst blockStyles = {\n  0: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Straight\"\n  },\n  1: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 00px 0px\",\n      backgroundColor: \"#fff\",\n      border: \"solid thin #b0bec5\"\n    },\n    name: \"Delete\"\n  },\n  2: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 50px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Top Left\"\n  },\n  3: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Top Right\"\n  },\n  4: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 50px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Bottom Left\"\n  },\n  5: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 50px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Bottom Right\"\n  }\n};\nconst squareStyles = {\n  straight: \"none\",\n  delete: \"none\",\n  topLeft: \"0px 50px 0px 0px\",\n  topRight: \"50px 0px 0px 0px\",\n  bottomLeft: \"0px 0px 0px 50px\",\n  bottomRight: \"0px 0px 50px 0px\"\n};\n\nclass DrawingTool extends Component {\n  constructor() {\n    super();\n\n    this.generatesBlocks = () => {\n      let rows = [];\n      let count = 0;\n\n      for (let row = 0; row < 3; row++) {\n        let columns = [];\n\n        for (let column = 0; column < 2; column++) {\n          columns.push( /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-center\",\n            key: count,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.selectBlock,\n            id: blockStyles[count][\"name\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }\n          }, blockStyles[count][\"name\"])));\n          count++;\n        }\n\n        rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: row,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }\n        }, columns));\n      }\n\n      return rows;\n    };\n\n    this.selectBlock = e => {\n      this.setState({\n        blockType: e.target.id\n      });\n    };\n\n    this.definePoint = e => {\n      e.preventDefault();\n\n      if (this.state.laneData) {\n        this.state.laneData.forEach(object => {\n          if (object.pointCoordinate === this.state.pointCoordinate) {\n            object.point = this.state.pointName;\n          }\n        });\n      }\n\n      this.setState({\n        show: false\n      });\n    };\n\n    this.setLane = e => {\n      this.setState({\n        laneNumber: e.target.value\n      });\n    };\n\n    this.drawPath = e => {\n      let gridId = e.target.id;\n\n      if (this.state.blockType === \"Straight\" && this.state.remainingBlocks >= 1) {\n        this.setGridStyle(e, colors[this.state.laneNumber], \"none\", squareStyles[\"straight\"], 1);\n        this.setLaneData(gridId, 1);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Delete\") {\n        if (this.state.laneData) {\n          let newLaneData = this.state.laneData.filter(function (object) {\n            return object.pointCoordinate !== gridId;\n          });\n          this.setState({\n            laneData: newLaneData\n          });\n        }\n\n        this.setGridStyle(e, \"#fff\", \"1px solid #cfd8dc\", squareStyles[\"delete\"], 0);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks += 1\n        });\n      } else if (this.state.blockType === \"Top Left\" && this.state.remainingBlocks >= 1) {\n        this.setGridStyle(e, colors[this.state.laneNumber], \"none\", squareStyles[\"topLeft\"], 2);\n        this.setLaneData(gridId, 2);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Top Right\" && this.state.remainingBlocks >= 1) {\n        this.setGridStyle(e, colors[this.state.laneNumber], \"none\", squareStyles[\"topRight\"], 3);\n        this.setLaneData(gridId, 3);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Bottom Left\" && this.state.remainingBlocks >= 1) {\n        this.setGridStyle(e, colors[this.state.laneNumber], \"none\", squareStyles[\"bottomLeft\"], 4);\n        this.setLaneData(gridId, 4);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Bottom Right\" && this.state.remainingBlocks >= 1) {\n        this.setGridStyle(e, colors[this.state.laneNumber], \"none\", squareStyles[\"bottomRight\"], 5);\n        this.setLaneData(gridId, 5);\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      }\n    };\n\n    this.setGridStyle = (event, color, border, squareStyle, type) => {\n      event.target.style.backgroundColor = color;\n      event.target.style.border = border;\n      event.target.style.borderRadius = squareStyle;\n      document.getElementById(event.target.id).setAttribute(\"data-square\", type);\n    };\n\n    this.setLaneData = (gridId, shape) => {\n      let id = gridId.split(\",\");\n      let row = id.splice(0, 1).join(\"\");\n      let col = id.join(\",\");\n      this.state.laneData.push({\n        pointCoordinate: [row + \",\" + col],\n        pointName: null,\n        shape: shape,\n        direction: this.detectDirection(gridId),\n        coordinate: []\n      });\n    };\n\n    this.detectDirection = currentCoordinate => {\n      if (this.state.previousCoordinates === null && !this.state.firstClick) {\n        this.setState({\n          firstClick: true,\n          previousCoordinates: currentCoordinate\n        });\n        return null;\n      } else {\n        let prevCoordinate = this.state.previousCoordinates.split(\",\");\n        let prevRow = prevCoordinate.splice(0, 1).join(\"\");\n        let prevCol = prevCoordinate.join(\",\");\n        let preType = document.getElementById(this.state.previousCoordinates).getAttribute(\"data-square\");\n        let curCoordinate = currentCoordinate.split(\",\");\n        let curRow = curCoordinate.splice(0, 1).join(\"\");\n        let curCol = curCoordinate.join(\",\");\n        let curType = document.getElementById(currentCoordinate).getAttribute(\"data-square\");\n        this.setState({\n          previousCoordinates: currentCoordinate\n        });\n\n        if (curRow > prevRow && curCol === prevCol && curType === \"1\") {\n          return 1;\n        } else if (curRow < prevRow && curCol === prevCol && curType === \"1\") {\n          return 2;\n        } else if (curRow === prevRow && curCol > prevCol && curType === \"1\") {\n          return 3;\n        } else if (curRow === prevRow && curCol < prevCol && curType === \"1\") {\n          return 4;\n        } else if (curRow > prevRow && curCol === prevCol && curType === \"5\") {\n          return 5;\n        } else if (curRow > prevRow && curCol === prevCol && curType === \"4\") {\n          return 6;\n        } else if (curRow < prevRow && curCol === prevCol && curType === \"2\") {\n          return 7;\n        } else if (curRow < prevRow && curCol === prevCol && curType === \"3\") {\n          return 8;\n        } else if (curRow === prevRow && curCol > prevCol && curType === \"5\") {\n          return 9;\n        } else if (curRow === prevRow && curCol > prevCol && curType === \"2\") {\n          return 10;\n        } else if (curRow === prevRow && curCol < prevCol && curType === \"4\") {\n          return 11;\n        } else if (curRow === prevRow && curCol < prevCol && curType === \"3\") {\n          return 12;\n        }\n      }\n    };\n\n    this.submitLaneData = () => {\n      this.setState({\n        pathData: {\n          id: parseInt(this.state.laneNumber),\n          path: this.state.laneData\n        }\n      }); // axios\n      //   .post(\"http://localhost:8000/api/\", JSON.stringify(this.state.pathData))\n      //   .then(\n      //     (response) => {\n      //       console.log(response);\n      //     },\n      //     (error) => {\n      //       console.log(error);\n      //     }\n      //   );\n    };\n\n    this.state = {\n      show: false,\n      coordinate: [],\n      pointCoordinate: [],\n      pointName: null,\n      drawMap: [],\n      remainingBlocks: 0,\n      mergePoints: 0,\n      blockType: null,\n      laneData: [],\n      laneNumber: null,\n      previousCoordinates: null,\n      pathData: {\n        id: null,\n        path: []\n      },\n      firstClick: false\n    };\n  }\n\n  componentDidMount() {\n    this.generateTileMap();\n    this.generatesBlocks();\n    this.carsPerLane();\n    this.generateEmptyMap();\n  }\n\n  generateTileMap() {\n    let rows = [];\n\n    for (let y = 0; y < 20; y++) {\n      const column = [];\n\n      for (let x = 0; x < 20; x++) {\n        let coordinate = [];\n        coordinate.push(y);\n        coordinate.push(x);\n        column.push( /*#__PURE__*/React.createElement(\"td\", {\n          key: x,\n          className: \"text-center\",\n          onClick: this.drawPath,\n          onDoubleClick: e => this.setState({\n            show: true,\n            close: false,\n            coordinate: \"\"\n          }),\n          id: y + \",\" + x,\n          key: y + \",\" + x,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: y,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, column));\n    }\n\n    return rows;\n  }\n\n  carsPerLane() {\n    let options = [];\n\n    for (let cars = 1; cars <= 20; cars++) {\n      options.push( /*#__PURE__*/React.createElement(\"option\", {\n        value: cars,\n        key: cars,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, cars));\n    }\n\n    return options;\n  }\n\n  generateEmptyMap() {\n    let rows = [];\n\n    for (let y = 0; y < 20; y++) {\n      let columns = [];\n\n      for (let x = 0; x < 20; x++) {\n        columns.push(0);\n      }\n\n      rows.push(columns);\n    }\n\n    this.setState({\n      drawMap: rows\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    }, \"Drawing Tool\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"drawing-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }\n    }, this.generateTileMap()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, \"Lane Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: this.setLane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      default: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 29\n      }\n    }, \"Select lane number\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 29\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 25\n      }\n    }, \"Cars per lane\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: e => this.setState({\n        remainingBlocks: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      default: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 29\n      }\n    }, \"Select number of cars per lane\"), this.carsPerLane()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }, \"Lane Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: e => e.target.value > 1 ? this.setState({\n        mergePoints: 1\n      }) : this.setState({\n        mergePoints: 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      default: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 29\n      }\n    }, \"Select lane type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 29\n      }\n    }, \"Separate Entry/Exit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 29\n      }\n    }, \"Separate Entry, Common Exit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 29\n      }\n    }, \"Common Entry, Separate Exit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered justify-content-center block-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 29\n      }\n    }, this.generatesBlocks())))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 25\n      }\n    }, this.state.laneNumber >= 1 ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block save-path\",\n      type: \"button\",\n      onClick: this.submitLaneData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 29\n      }\n    }, \"Save Lane \", this.state.laneNumber, \" Configurations\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block save-path disabled\",\n      type: \"button\",\n      onClick: this.submitLaneData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 29\n      }\n    }, \"Save Lane \", this.state.laneNumber, \" Configurations\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 25\n      }\n    }, \"Remaining Blocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 25\n      }\n    }, this.state.remainingBlocks)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 25\n      }\n    }, \"Merge Points\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 25\n      }\n    }, this.state.mergePoints))))))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, \"Select point\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }\n    }, \"Point Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"pointName\",\n      onChange: e => this.setState({\n        pointName: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      default: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 21\n      }\n    }, \"Select point\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    }, \"Arrival\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 21\n      }\n    }, \"Menu\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 21\n      }\n    }, \"Cashier\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 21\n      }\n    }, \"Pickup\"))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        show: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 15\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.definePoint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 15\n      }\n    }, \"Add\")))));\n  }\n\n}\n\nexport default DrawingTool;","map":{"version":3,"sources":["D:/sqsrm_frontend/src/component/drawing-tool/DrawingTool.jsx"],"names":["React","Component","Fragment","Modal","Button","colors","mergePoint","blockStyles","style","width","height","borderRadius","backgroundColor","name","border","squareStyles","straight","delete","topLeft","topRight","bottomLeft","bottomRight","DrawingTool","constructor","generatesBlocks","rows","count","row","columns","column","push","selectBlock","e","setState","blockType","target","id","definePoint","preventDefault","state","laneData","forEach","object","pointCoordinate","point","pointName","show","setLane","laneNumber","value","drawPath","gridId","remainingBlocks","setGridStyle","setLaneData","newLaneData","filter","event","color","squareStyle","type","document","getElementById","setAttribute","shape","split","splice","join","col","direction","detectDirection","coordinate","currentCoordinate","previousCoordinates","firstClick","prevCoordinate","prevRow","prevCol","preType","getAttribute","curCoordinate","curRow","curCol","curType","submitLaneData","pathData","parseInt","path","drawMap","mergePoints","componentDidMount","generateTileMap","carsPerLane","generateEmptyMap","y","x","close","options","cars","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./drawing-tool.css\";\n\nconst colors = {\n  1: \"#0277bd\",\n  2: \"#00796b\",\n  3: \"#d32f2f\",\n  4: \"#ffb74d\",\n  5: \"#ab47bc\",\n};\n\nconst mergePoint = \"#102027\";\n\nconst blockStyles = {\n  0: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Straight\",\n  },\n  1: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 00px 0px\",\n      backgroundColor: \"#fff\",\n      border: \"solid thin #b0bec5\",\n    },\n    name: \"Delete\",\n  },\n  2: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 50px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Top Left\",\n  },\n  3: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Top Right\",\n  },\n  4: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 50px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Bottom Left\",\n  },\n  5: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 50px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Bottom Right\",\n  },\n};\n\nconst squareStyles = {\n  straight: \"none\",\n  delete: \"none\",\n  topLeft: \"0px 50px 0px 0px\",\n  topRight: \"50px 0px 0px 0px\",\n  bottomLeft: \"0px 0px 0px 50px\",\n  bottomRight: \"0px 0px 50px 0px\",\n};\n\nclass DrawingTool extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      coordinate: [],\n      pointCoordinate: [],\n      pointName: null,\n      drawMap: [],\n      remainingBlocks: 0,\n      mergePoints: 0,\n      blockType: null,\n      laneData: [],\n      laneNumber: null,\n      previousCoordinates: null,\n      pathData: {\n        id: null,\n        path: [],\n      },\n      firstClick: false,\n    };\n  }\n\n  componentDidMount() {\n    this.generateTileMap();\n    this.generatesBlocks();\n    this.carsPerLane();\n    this.generateEmptyMap();\n  }\n\n  generateTileMap() {\n    let rows = [];\n    for (let y = 0; y < 20; y++) {\n      const column = [];\n      for (let x = 0; x < 20; x++) {\n        let coordinate = [];\n        coordinate.push(y);\n        coordinate.push(x);\n        column.push(\n          <td\n            key={x}\n            className={\"text-center\"}\n            onClick={this.drawPath}\n            onDoubleClick={(e) =>\n              this.setState({\n                show: true,\n                close: false,\n                coordinate: \"\",\n              })\n            }\n            id={y + \",\" + x}\n            key={y + \",\" + x}\n          ></td>\n        );\n      }\n      rows.push(<tr key={y}>{column}</tr>);\n    }\n    return rows;\n  }\n\n  carsPerLane() {\n    let options = [];\n    for (let cars = 1; cars <= 20; cars++) {\n      options.push(\n        <option value={cars} key={cars}>\n          {cars}\n        </option>\n      );\n    }\n    return options;\n  }\n\n  generatesBlocks = () => {\n    let rows = [];\n    let count = 0;\n    for (let row = 0; row < 3; row++) {\n      let columns = [];\n      for (let column = 0; column < 2; column++) {\n        columns.push(\n          <td className=\"text-center\" key={count}>\n            <button\n              className=\"btn btn-success\"\n              onClick={this.selectBlock}\n              id={blockStyles[count][\"name\"]}\n            >\n              {blockStyles[count][\"name\"]}\n            </button>\n          </td>\n        );\n        count++;\n      }\n      rows.push(<tr key={row}>{columns}</tr>);\n    }\n    return rows;\n  };\n\n  generateEmptyMap() {\n    let rows = [];\n    for (let y = 0; y < 20; y++) {\n      let columns = [];\n      for (let x = 0; x < 20; x++) {\n        columns.push(0);\n      }\n      rows.push(columns);\n    }\n    this.setState({ drawMap: rows });\n  }\n\n  selectBlock = (e) => {\n    this.setState({ blockType: e.target.id });\n  };\n\n  definePoint = (e) => {\n    e.preventDefault();\n    if (this.state.laneData) {\n      this.state.laneData.forEach((object) => {\n        if (object.pointCoordinate === this.state.pointCoordinate) {\n          object.point = this.state.pointName;\n        }\n      });\n    }\n    this.setState({ show: false });\n  };\n\n  setLane = (e) => {\n    this.setState({ laneNumber: e.target.value });\n  };\n\n  drawPath = (e) => {\n    let gridId = e.target.id;\n\n    if (\n      this.state.blockType === \"Straight\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      this.setGridStyle(\n        e,\n        colors[this.state.laneNumber],\n        \"none\",\n        squareStyles[\"straight\"],\n        1\n      );\n      this.setLaneData(gridId, 1);\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (this.state.blockType === \"Delete\") {\n      if (this.state.laneData) {\n        let newLaneData = this.state.laneData.filter(function (object) {\n          return object.pointCoordinate !== gridId;\n        });\n        this.setState({ laneData: newLaneData });\n      }\n\n      this.setGridStyle(\n        e,\n        \"#fff\",\n        \"1px solid #cfd8dc\",\n        squareStyles[\"delete\"],\n        0\n      );\n      this.setState({ remainingBlocks: (this.state.remainingBlocks += 1) });\n    } else if (\n      this.state.blockType === \"Top Left\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      this.setGridStyle(\n        e,\n        colors[this.state.laneNumber],\n        \"none\",\n        squareStyles[\"topLeft\"],\n        2\n      );\n\n      this.setLaneData(gridId, 2);\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Top Right\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      this.setGridStyle(\n        e,\n        colors[this.state.laneNumber],\n        \"none\",\n        squareStyles[\"topRight\"],\n        3\n      );\n\n      this.setLaneData(gridId, 3);\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Bottom Left\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      this.setGridStyle(\n        e,\n        colors[this.state.laneNumber],\n        \"none\",\n        squareStyles[\"bottomLeft\"],\n        4\n      );\n\n      this.setLaneData(gridId, 4);\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Bottom Right\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      this.setGridStyle(\n        e,\n        colors[this.state.laneNumber],\n        \"none\",\n        squareStyles[\"bottomRight\"],\n        5\n      );\n      this.setLaneData(gridId, 5);\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    }\n  };\n\n  setGridStyle = (event, color, border, squareStyle, type) => {\n    event.target.style.backgroundColor = color;\n    event.target.style.border = border;\n    event.target.style.borderRadius = squareStyle;\n    document.getElementById(event.target.id).setAttribute(\"data-square\", type);\n  };\n\n  setLaneData = (gridId, shape) => {\n    let id = gridId.split(\",\");\n    let row = id.splice(0, 1).join(\"\");\n    let col = id.join(\",\");\n    this.state.laneData.push({\n      pointCoordinate: [row + \",\" + col],\n      pointName: null,\n      shape: shape,\n      direction: this.detectDirection(gridId),\n      coordinate: [],\n    });\n  };\n\n  detectDirection = (currentCoordinate) => {\n    if (this.state.previousCoordinates === null && !this.state.firstClick) {\n      this.setState({\n        firstClick: true,\n        previousCoordinates: currentCoordinate,\n      });\n      return null;\n    } else {\n      let prevCoordinate = this.state.previousCoordinates.split(\",\");\n      let prevRow = prevCoordinate.splice(0, 1).join(\"\");\n      let prevCol = prevCoordinate.join(\",\");\n      let preType = document\n        .getElementById(this.state.previousCoordinates)\n        .getAttribute(\"data-square\");\n\n      let curCoordinate = currentCoordinate.split(\",\");\n      let curRow = curCoordinate.splice(0, 1).join(\"\");\n      let curCol = curCoordinate.join(\",\");\n      let curType = document\n        .getElementById(currentCoordinate)\n        .getAttribute(\"data-square\");\n\n      this.setState({\n        previousCoordinates: currentCoordinate,\n      });\n\n      if (curRow > prevRow && curCol === prevCol && curType === \"1\") {\n        return 1;\n      } else if (curRow < prevRow && curCol === prevCol && curType === \"1\") {\n        return 2;\n      } else if (curRow === prevRow && curCol > prevCol && curType === \"1\") {\n        return 3;\n      } else if (curRow === prevRow && curCol < prevCol && curType === \"1\") {\n        return 4;\n      } else if (curRow > prevRow && curCol === prevCol && curType === \"5\") {\n        return 5;\n      } else if (curRow > prevRow && curCol === prevCol && curType === \"4\") {\n        return 6;\n      } else if (curRow < prevRow && curCol === prevCol && curType === \"2\") {\n        return 7;\n      } else if (curRow < prevRow && curCol === prevCol && curType === \"3\") {\n        return 8;\n      } else if (curRow === prevRow && curCol > prevCol && curType === \"5\") {\n        return 9;\n      } else if (curRow === prevRow && curCol > prevCol && curType === \"2\") {\n        return 10;\n      } else if (curRow === prevRow && curCol < prevCol && curType === \"4\") {\n        return 11;\n      } else if (curRow === prevRow && curCol < prevCol && curType === \"3\") {\n        return 12;\n      }\n    }\n  };\n\n  submitLaneData = () => {\n    this.setState({\n      pathData: {\n        id: parseInt(this.state.laneNumber),\n        path: this.state.laneData,\n      },\n    });\n\n    // axios\n    //   .post(\"http://localhost:8000/api/\", JSON.stringify(this.state.pathData))\n    //   .then(\n    //     (response) => {\n    //       console.log(response);\n    //     },\n    //     (error) => {\n    //       console.log(error);\n    //     }\n    //   );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"card\">\n            <div className=\"card-header\">Drawing Tool</div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"row\">\n                    <div className=\"col-8\">\n                      <table className=\"drawing-table\">\n                        <tbody>{this.generateTileMap()}</tbody>\n                      </table>\n                    </div>\n                    <div className=\"col-4\">\n                      <div className=\"form-group row\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 col-form-label\"\n                        >\n                          Lane Number\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"point-name\"\n                            onChange={this.setLane}\n                          >\n                            <option value={\"\"} selected default={\"\"} disabled>\n                              Select lane number\n                            </option>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 col-form-label\"\n                        >\n                          Cars per lane\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"point-name\"\n                            onChange={(e) =>\n                              this.setState({\n                                remainingBlocks: e.target.value,\n                              })\n                            }\n                          >\n                            <option value={\"\"} selected default={\"\"} disabled>\n                              Select number of cars per lane\n                            </option>\n                            {this.carsPerLane()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\">\n                          Lane Type\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"point-name\"\n                            onChange={(e) =>\n                              e.target.value > 1\n                                ? this.setState({ mergePoints: 1 })\n                                : this.setState({ mergePoints: 0 })\n                            }\n                          >\n                            <option value={\"\"} selected default={\"\"} disabled>\n                              Select lane type\n                            </option>\n                            <option value={1}>Separate Entry/Exit</option>\n                            <option value={2}>\n                              Separate Entry, Common Exit\n                            </option>\n                            <option value={3}>\n                              Common Entry, Separate Exit\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <table className=\"table table-bordered justify-content-center block-table\">\n                            <tbody>{this.generatesBlocks()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          {this.state.laneNumber >= 1 ? (\n                            <button\n                              className=\"btn btn-primary btn-block save-path\"\n                              type=\"button\"\n                              onClick={this.submitLaneData}\n                            >\n                              Save Lane {this.state.laneNumber} Configurations\n                            </button>\n                          ) : (\n                            <button\n                              className=\"btn btn-primary btn-block save-path disabled\"\n                              type=\"button\"\n                              onClick={this.submitLaneData}\n                            >\n                              Save Lane {this.state.laneNumber} Configurations\n                            </button>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 font-weight-bold\"\n                        >\n                          Remaining Blocks\n                        </label>\n                        <div className=\"col-sm-8 font-weight-bold\">\n                          {this.state.remainingBlocks}\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 font-weight-bold\"\n                        >\n                          Merge Points\n                        </label>\n                        <div className=\"col-sm-8 font-weight-bold\">\n                          {this.state.mergePoints}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*point select modal*/}\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <Modal.Title>Select point</Modal.Title>\n          </Modal.Header>\n          <form>\n            <Modal.Body>\n              <div className=\"form-group row\">\n                <label\n                  htmlFor=\"staticEmail\"\n                  className=\"col-sm-4 col-form-label\"\n                >\n                  Point Name\n                </label>\n                <div className=\"col-sm-8\">\n                  <select\n                    className=\"form-control\"\n                    name=\"pointName\"\n                    onChange={(e) =>\n                      this.setState({ pointName: e.target.value })\n                    }\n                  >\n                    <option value=\"\" selected default>\n                      Select point\n                    </option>\n                    <option value=\"1\">Arrival</option>\n                    <option value=\"2\">Menu</option>\n                    <option value=\"3\">Cashier</option>\n                    <option value=\"4\">Pickup</option>\n                  </select>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"secondary\"\n                onClick={() => this.setState({ show: false })}\n              >\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.definePoint}>\n                Add\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default DrawingTool;\n"]},"metadata":{},"sourceType":"module"}