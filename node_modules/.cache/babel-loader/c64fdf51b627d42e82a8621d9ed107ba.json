{"ast":null,"code":"var _jsxFileName = \"D:\\\\sqsrm_frontend\\\\src\\\\component\\\\drawing-tool\\\\DrawingTool.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./drawing-tool.css\";\nconst colors = {\n  1: \"#0277bd\",\n  2: \"#00796b\",\n  3: \"#d32f2f\",\n  4: \"#ffb74d\",\n  5: \"#ab47bc\"\n};\nconst mergePoint = \"#102027\";\nconst blockStyles = {\n  0: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Straight\"\n  },\n  1: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 00px 0px\",\n      backgroundColor: \"#fff\",\n      border: \"solid thin #b0bec5\"\n    },\n    name: \"Delete\"\n  },\n  2: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 50px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Top Left\"\n  },\n  3: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Top Right\"\n  },\n  4: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 50px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Bottom Left\"\n  },\n  5: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 50px 0px\",\n      backgroundColor: \"#607d8b\"\n    },\n    name: \"Bottom Right\"\n  }\n};\nconst squareStyles = {\n  straight: \"none\",\n  delete: \"none\",\n  topLeft: \"0px 50px 0px 0px\",\n  topRight: \"50px 0px 0px 0px\",\n  bottomLeft: \"0px 0px 0px 50px\",\n  bottomRight: \"0px 0px 50px 0px\"\n};\n\nclass DrawingTool extends Component {\n  constructor() {\n    super();\n\n    this.generatesBlocks = () => {\n      let rows = [];\n      let count = 0;\n\n      for (let row = 0; row < 3; row++) {\n        let columns = [];\n\n        for (let column = 0; column < 2; column++) {\n          columns.push( /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-center\",\n            key: count,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.selectBlock,\n            id: blockStyles[count][\"name\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }\n          }, blockStyles[count][\"name\"])));\n          count++;\n        }\n\n        rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: row,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }\n        }, columns));\n      }\n\n      return rows;\n    };\n\n    this.selectBlock = e => {\n      this.setState({\n        blockType: e.target.id\n      });\n    };\n\n    this.setLane = e => {\n      this.setState({\n        laneNumber: e.target.value\n      });\n      let lane = {},\n          lanes = [];\n      lanes.number = e.target.value;\n      lanes.blokcs = 0;\n      lanes.push({\n        path: lane\n      });\n      this.setState({\n        lanes: {\n          path: lane\n        }\n      });\n      console.log(this.state.lanes);\n    };\n\n    this.drawPath = e => {\n      let row = parseInt(e.target.id.charAt(0));\n      let column = parseInt(e.target.id.charAt(1));\n      let newMap = this.state.drawMap;\n\n      if (this.state.blockType === \"Straight\" && this.state.remainingBlocks >= 1) {\n        e.target.style.backgroundColor = \"#607d8b\";\n        e.target.style.border = \"none\";\n        e.target.style.borderRadius = squareStyles[\"straight\"];\n        document.getElementById(e.target.id).innerHTML = \"1\";\n        newMap[row][column] = 1;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Delete\") {\n        e.target.style.backgroundColor = \"#fff\";\n        e.target.style.border = \"1px doted #585858\";\n        e.target.style.borderRadius = squareStyles[\"delete\"];\n        document.getElementById(e.target.id).innerHTML = \"\";\n        newMap[row][column] = 0;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks += 1\n        });\n      } else if (this.state.blockType === \"Top Left\" && this.state.remainingBlocks >= 1) {\n        e.target.style.backgroundColor = \"#607d8b\";\n        e.target.style.border = \"none\";\n        e.target.style.borderRadius = squareStyles[\"topLeft\"];\n        newMap[row][column] = 2;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Top Right\" && this.state.remainingBlocks >= 1) {\n        e.target.style.backgroundColor = \"#607d8b\";\n        e.target.style.border = \"none\";\n        e.target.style.borderRadius = squareStyles[\"topRight\"];\n        newMap[row][column] = 3;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Bottom Left\" && this.state.remainingBlocks >= 1) {\n        e.target.style.backgroundColor = \"#607d8b\";\n        e.target.style.border = \"none\";\n        e.target.style.borderRadius = squareStyles[\"bottomLeft\"];\n        newMap[row][column] = 4;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      } else if (this.state.blockType === \"Bottom Right\" && this.state.remainingBlocks >= 1) {\n        e.target.style.backgroundColor = \"#607d8b\";\n        e.target.style.border = \"none\";\n        e.target.style.borderRadius = squareStyles[\"bottomRight\"];\n        newMap[row][column] = 5;\n        this.setState({\n          remainingBlocks: this.state.remainingBlocks -= 1\n        });\n      }\n\n      this.setState({\n        drawMap: newMap\n      });\n    };\n\n    this.state = {\n      show: false,\n      coordinate: [0, 0],\n      point: null,\n      drawMap: [],\n      remainingBlocks: 0,\n      blockType: null,\n      lanes: [],\n      laneNumber: null\n    };\n  }\n\n  componentDidMount() {\n    this.generateTileMap();\n    this.generatesBlocks();\n    this.carsPerLane();\n    this.generateEmptyMap();\n  }\n\n  generateTileMap() {\n    let rows = [];\n\n    for (let y = 0; y < 20; y++) {\n      const column = [];\n\n      for (let x = 0; x < 20; x++) {\n        column.push( /*#__PURE__*/React.createElement(\"td\", {\n          key: x,\n          className: \"text-center\",\n          onClick: this.drawPath,\n          onDoubleClick: () => this.setState({\n            show: true,\n            close: false,\n            coordinate: [y, x]\n          }),\n          id: y + \"\" + x,\n          key: y + \"\" + x,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: y,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, column));\n    }\n\n    return rows;\n  }\n\n  carsPerLane() {\n    let options = [];\n\n    for (let cars = 1; cars <= 20; cars++) {\n      options.push( /*#__PURE__*/React.createElement(\"option\", {\n        value: cars,\n        key: cars,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, cars));\n    }\n\n    return options;\n  }\n\n  generateEmptyMap() {\n    let rows = [];\n\n    for (let y = 0; y < 20; y++) {\n      let columns = [];\n\n      for (let x = 0; x < 20; x++) {\n        columns.push(0);\n      }\n\n      rows.push(columns);\n    }\n\n    this.setState({\n      drawMap: rows\n    });\n  }\n\n  definePoints(e) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, \"Drawing Tool\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"drawing-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, this.generateTileMap()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, \"Lane Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: this.setLane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: \"\",\n      default: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"Select lane number\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Cars per lane\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: e => this.setState({\n        remainingBlocks: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: \"\",\n      default: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, \"Select number of cars per lane\"), this.carsPerLane()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }, \"Lane Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: \"\",\n      default: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, \"Select lane type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 29\n      }\n    }, \"Separate Entry/Exit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 29\n      }\n    }, \"Separate Entry, Common Exit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, \"Common Entry, Separate Exit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered justify-content-center block-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, this.generatesBlocks())))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block save-path\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 27\n      }\n    }, \"Save \", this.state.setLane))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 25\n      }\n    }, \"Remaining Blocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, this.state.remainingBlocks)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }\n    }, \"Merge Points\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, this.state.remainingBlocks))))))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }, \"Select point\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"staticEmail\",\n      className: \"col-sm-4 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }, \"Point Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"point-name\",\n      onChange: e => this.setState({\n        point: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      Value: \"\",\n      selected: true,\n      default: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, \"Select point\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, \"Arrival\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, \"Menu\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, \"Cashier\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }, \"Pickup\"))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        show: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 15\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.definePoints,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, \"Add\")))));\n  }\n\n}\n\nexport default DrawingTool;","map":{"version":3,"sources":["D:/sqsrm_frontend/src/component/drawing-tool/DrawingTool.jsx"],"names":["React","Component","Fragment","Modal","Button","colors","mergePoint","blockStyles","style","width","height","borderRadius","backgroundColor","name","border","squareStyles","straight","delete","topLeft","topRight","bottomLeft","bottomRight","DrawingTool","constructor","generatesBlocks","rows","count","row","columns","column","push","selectBlock","e","setState","blockType","target","id","setLane","laneNumber","value","lane","lanes","number","blokcs","path","console","log","state","drawPath","parseInt","charAt","newMap","drawMap","remainingBlocks","document","getElementById","innerHTML","show","coordinate","point","componentDidMount","generateTileMap","carsPerLane","generateEmptyMap","y","x","close","options","cars","definePoints","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACb,KAAG,SADU;AAEb,KAAG,SAFU;AAGb,KAAG,SAHU;AAIb,KAAG,SAJU;AAKb,KAAG;AALU,CAAf;AAQA,MAAMC,UAAU,GAAG,SAAnB;AAEA,MAAMC,WAAW,GAAG;AAClB,KAAG;AACDC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,iBAHT;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADN;AAODC,IAAAA,IAAI,EAAE;AAPL,GADe;AAUlB,KAAG;AACDL,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,kBAHT;AAILC,MAAAA,eAAe,EAAE,MAJZ;AAKLE,MAAAA,MAAM,EAAE;AALH,KADN;AAQDD,IAAAA,IAAI,EAAE;AARL,GAVe;AAoBlB,KAAG;AACDL,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,kBAHT;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADN;AAODC,IAAAA,IAAI,EAAE;AAPL,GApBe;AA6BlB,KAAG;AACDL,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,kBAHT;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADN;AAODC,IAAAA,IAAI,EAAE;AAPL,GA7Be;AAsClB,KAAG;AACDL,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,kBAHT;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADN;AAODC,IAAAA,IAAI,EAAE;AAPL,GAtCe;AA+ClB,KAAG;AACDL,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE,kBAHT;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADN;AAODC,IAAAA,IAAI,EAAE;AAPL;AA/Ce,CAApB;AA0DA,MAAME,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,MADS;AAEnBC,EAAAA,MAAM,EAAE,MAFW;AAGnBC,EAAAA,OAAO,EAAE,kBAHU;AAInBC,EAAAA,QAAQ,EAAE,kBAJS;AAKnBC,EAAAA,UAAU,EAAE,kBALO;AAMnBC,EAAAA,WAAW,EAAE;AANM,CAArB;;AASA,MAAMC,WAAN,SAA0BrB,SAA1B,CAAoC;AAClCsB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAwDdC,eAxDc,GAwDI,MAAM;AACtB,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,CAA9B,EAAiCA,MAAM,EAAvC,EAA2C;AACzCD,UAAAA,OAAO,CAACE,IAAR,eACE;AAAI,YAAA,SAAS,EAAC,aAAd;AAA4B,YAAA,GAAG,EAAEJ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,SAAS,EAAC,iBADZ;AAEE,YAAA,OAAO,EAAE,KAAKK,WAFhB;AAGE,YAAA,EAAE,EAAExB,WAAW,CAACmB,KAAD,CAAX,CAAmB,MAAnB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGnB,WAAW,CAACmB,KAAD,CAAX,CAAmB,MAAnB,CALH,CADF,CADF;AAWAA,UAAAA,KAAK;AACN;;AACDD,QAAAA,IAAI,CAACK,IAAL,eAAU;AAAI,UAAA,GAAG,EAAEH,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeC,OAAf,CAAV;AACD;;AACD,aAAOH,IAAP;AACD,KA9Ea;;AAAA,SA4FdM,WA5Fc,GA4FCC,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAtB,OAAd;AACD,KA9Fa;;AAAA,SAkGdC,OAlGc,GAkGHL,CAAD,IAAO;AACf,WAAKC,QAAL,CAAc;AAAEK,QAAAA,UAAU,EAAEN,CAAC,CAACG,MAAF,CAASI;AAAvB,OAAd;AACA,UAAIC,IAAI,GAAG,EAAX;AAAA,UACEC,KAAK,GAAG,EADV;AAEAA,MAAAA,KAAK,CAACC,MAAN,GAAeV,CAAC,CAACG,MAAF,CAASI,KAAxB;AACAE,MAAAA,KAAK,CAACE,MAAN,GAAe,CAAf;AACAF,MAAAA,KAAK,CAACX,IAAN,CAAW;AAAEc,QAAAA,IAAI,EAAEJ;AAAR,OAAX;AACA,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAEJ;AAAR;AAAT,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,KAAvB;AACD,KA3Ga;;AAAA,SA6GdO,QA7Gc,GA6GFhB,CAAD,IAAO;AAChB,UAAIL,GAAG,GAAGsB,QAAQ,CAACjB,CAAC,CAACG,MAAF,CAASC,EAAT,CAAYc,MAAZ,CAAmB,CAAnB,CAAD,CAAlB;AACA,UAAIrB,MAAM,GAAGoB,QAAQ,CAACjB,CAAC,CAACG,MAAF,CAASC,EAAT,CAAYc,MAAZ,CAAmB,CAAnB,CAAD,CAArB;AAEA,UAAIC,MAAM,GAAG,KAAKJ,KAAL,CAAWK,OAAxB;;AAEA,UACE,KAAKL,KAAL,CAAWb,SAAX,KAAyB,UAAzB,IACA,KAAKa,KAAL,CAAWM,eAAX,IAA8B,CAFhC,EAGE;AACArB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,SAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,MAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,UAAD,CAA1C;AACAuC,QAAAA,QAAQ,CAACC,cAAT,CAAwBvB,CAAC,CAACG,MAAF,CAASC,EAAjC,EAAqCoB,SAArC,GAAiD,GAAjD;AACAL,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD,OAVD,MAUO,IAAI,KAAKN,KAAL,CAAWb,SAAX,KAAyB,QAA7B,EAAuC;AAC5CF,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,MAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,mBAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,QAAD,CAA1C;AACAuC,QAAAA,QAAQ,CAACC,cAAT,CAAwBvB,CAAC,CAACG,MAAF,CAASC,EAAjC,EAAqCoB,SAArC,GAAiD,EAAjD;AACAL,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD,OAPM,MAOA,IACL,KAAKN,KAAL,CAAWb,SAAX,KAAyB,UAAzB,IACA,KAAKa,KAAL,CAAWM,eAAX,IAA8B,CAFzB,EAGL;AACArB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,SAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,MAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,SAAD,CAA1C;AACAoC,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD,OATM,MASA,IACL,KAAKN,KAAL,CAAWb,SAAX,KAAyB,WAAzB,IACA,KAAKa,KAAL,CAAWM,eAAX,IAA8B,CAFzB,EAGL;AACArB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,SAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,MAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,UAAD,CAA1C;AACAoC,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD,OATM,MASA,IACL,KAAKN,KAAL,CAAWb,SAAX,KAAyB,aAAzB,IACA,KAAKa,KAAL,CAAWM,eAAX,IAA8B,CAFzB,EAGL;AACArB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,SAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,MAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,YAAD,CAA1C;AACAoC,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD,OATM,MASA,IACL,KAAKN,KAAL,CAAWb,SAAX,KAAyB,cAAzB,IACA,KAAKa,KAAL,CAAWM,eAAX,IAA8B,CAFzB,EAGL;AACArB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeI,eAAf,GAAiC,SAAjC;AACAoB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeM,MAAf,GAAwB,MAAxB;AACAkB,QAAAA,CAAC,CAACG,MAAF,CAAS3B,KAAT,CAAeG,YAAf,GAA8BI,YAAY,CAAC,aAAD,CAA1C;AACAoC,QAAAA,MAAM,CAACxB,GAAD,CAAN,CAAYE,MAAZ,IAAsB,CAAtB;AACA,aAAKI,QAAL,CAAc;AAAEoB,UAAAA,eAAe,EAAG,KAAKN,KAAL,CAAWM,eAAX,IAA8B;AAAlD,SAAd;AACD;;AAED,WAAKpB,QAAL,CAAc;AAAEmB,QAAAA,OAAO,EAAED;AAAX,OAAd;AACD,KA3Ka;;AAEZ,SAAKJ,KAAL,GAAa;AACXU,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFD;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXP,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,eAAe,EAAE,CALN;AAMXnB,MAAAA,SAAS,EAAE,IANA;AAOXO,MAAAA,KAAK,EAAE,EAPI;AAQXH,MAAAA,UAAU,EAAE;AARD,KAAb;AAUD;;AAEDsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,eAAL;AACA,SAAKrC,eAAL;AACA,SAAKsC,WAAL;AACA,SAAKC,gBAAL;AACD;;AAEDF,EAAAA,eAAe,GAAG;AAChB,QAAIpC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAMnC,MAAM,GAAG,EAAf;;AACA,WAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BpC,QAAAA,MAAM,CAACC,IAAP,eACE;AACE,UAAA,GAAG,EAAEmC,CADP;AAEE,UAAA,SAAS,EAAE,aAFb;AAGE,UAAA,OAAO,EAAE,KAAKjB,QAHhB;AAIE,UAAA,aAAa,EAAE,MACb,KAAKf,QAAL,CAAc;AAAEwB,YAAAA,IAAI,EAAE,IAAR;AAAcS,YAAAA,KAAK,EAAE,KAArB;AAA4BR,YAAAA,UAAU,EAAE,CAACM,CAAD,EAAIC,CAAJ;AAAxC,WAAd,CALJ;AAOE,UAAA,EAAE,EAAED,CAAC,GAAG,EAAJ,GAASC,CAPf;AAQE,UAAA,GAAG,EAAED,CAAC,GAAG,EAAJ,GAASC,CARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AACDxC,MAAAA,IAAI,CAACK,IAAL,eAAU;AAAI,QAAA,GAAG,EAAEkC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAanC,MAAb,CAAV;AACD;;AACD,WAAOJ,IAAP;AACD;;AAEDqC,EAAAA,WAAW,GAAG;AACZ,QAAIK,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAI,EAA3B,EAA+BA,IAAI,EAAnC,EAAuC;AACrCD,MAAAA,OAAO,CAACrC,IAAR,eACE;AAAQ,QAAA,KAAK,EAAEsC,IAAf;AAAqB,QAAA,GAAG,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IADH,CADF;AAKD;;AACD,WAAOD,OAAP;AACD;;AA0BDJ,EAAAA,gBAAgB,GAAG;AACjB,QAAItC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAIpC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BrC,QAAAA,OAAO,CAACE,IAAR,CAAa,CAAb;AACD;;AACDL,MAAAA,IAAI,CAACK,IAAL,CAAUF,OAAV;AACD;;AACD,SAAKK,QAAL,CAAc;AAAEmB,MAAAA,OAAO,EAAE3B;AAAX,KAAd;AACD;;AAMD4C,EAAAA,YAAY,CAACrC,CAAD,EAAI,CAAE;;AA6ElBsC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKT,eAAL,EAAR,CADF,CADF,CADF,eAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,QAAQ,EAAE,KAAKxB,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAQ,MAAA,KAAK,EAAE,EAAf;AAAmB,MAAA,QAAQ,EAAE,EAA7B;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,eAQE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,eAUE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVF,eAWE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,eAYE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADF,CAPF,CADF,eA0BE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,QAAQ,EAAGL,CAAD,IACR,KAAKC,QAAL,CAAc;AAAEoB,QAAAA,eAAe,EAAErB,CAAC,CAACG,MAAF,CAASI;AAA5B,OAAd,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAQ,MAAA,KAAK,EAAE,EAAf;AAAmB,MAAA,QAAQ,EAAE,EAA7B;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAPF,EAUG,KAAKuB,WAAL,EAVH,CADF,CAPF,CA1BF,eAiDE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAE,EAAf;AAAmB,MAAA,QAAQ,EAAE,EAA7B;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,eAKE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,eAQE;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARF,CADF,CAJF,CAjDF,eAqEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKtC,eAAL,EAAR,CADF,CADF,CAFF,CArEF,eA8EE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,qCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKuB,KAAL,CAAWV,OADnB,CADF,CAFF,CA9EF,eAuFE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAOE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKU,KAAL,CAAWM,eADd,CAPF,CAvFF,eAmGE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWM,eADd,CAPF,CAnGF,CANF,CADF,CADF,CADF,CAFF,CADF,CADF,eAoIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,QAAQ,EAAGzB,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAE0B,QAAAA,KAAK,EAAE3B,CAAC,CAACG,MAAF,CAASI;AAAlB,OAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,OAAO,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAQE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,eASE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,eAWE;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF,CAPF,CADF,CADF,eA0BE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKN,QAAL,CAAc;AAAEwB,QAAAA,IAAI,EAAE;AAAR,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKY,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CA1BF,CAJF,CApIF,CADF;AAkLD;;AAjWiC;;AAoWpC,eAAe/C,WAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./drawing-tool.css\";\n\nconst colors = {\n  1: \"#0277bd\",\n  2: \"#00796b\",\n  3: \"#d32f2f\",\n  4: \"#ffb74d\",\n  5: \"#ab47bc\",\n};\n\nconst mergePoint = \"#102027\";\n\nconst blockStyles = {\n  0: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Straight\",\n  },\n  1: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 00px 0px\",\n      backgroundColor: \"#fff\",\n      border: \"solid thin #b0bec5\",\n    },\n    name: \"Delete\",\n  },\n  2: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 50px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Top Left\",\n  },\n  3: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50px 0px 0px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Top Right\",\n  },\n  4: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 0px 50px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Bottom Left\",\n  },\n  5: {\n    style: {\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"0px 0px 50px 0px\",\n      backgroundColor: \"#607d8b\",\n    },\n    name: \"Bottom Right\",\n  },\n};\n\nconst squareStyles = {\n  straight: \"none\",\n  delete: \"none\",\n  topLeft: \"0px 50px 0px 0px\",\n  topRight: \"50px 0px 0px 0px\",\n  bottomLeft: \"0px 0px 0px 50px\",\n  bottomRight: \"0px 0px 50px 0px\",\n};\n\nclass DrawingTool extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      coordinate: [0, 0],\n      point: null,\n      drawMap: [],\n      remainingBlocks: 0,\n      blockType: null,\n      lanes: [],\n      laneNumber: null,\n    };\n  }\n\n  componentDidMount() {\n    this.generateTileMap();\n    this.generatesBlocks();\n    this.carsPerLane();\n    this.generateEmptyMap();\n  }\n\n  generateTileMap() {\n    let rows = [];\n    for (let y = 0; y < 20; y++) {\n      const column = [];\n      for (let x = 0; x < 20; x++) {\n        column.push(\n          <td\n            key={x}\n            className={\"text-center\"}\n            onClick={this.drawPath}\n            onDoubleClick={() =>\n              this.setState({ show: true, close: false, coordinate: [y, x] })\n            }\n            id={y + \"\" + x}\n            key={y + \"\" + x}\n          ></td>\n        );\n      }\n      rows.push(<tr key={y}>{column}</tr>);\n    }\n    return rows;\n  }\n\n  carsPerLane() {\n    let options = [];\n    for (let cars = 1; cars <= 20; cars++) {\n      options.push(\n        <option value={cars} key={cars}>\n          {cars}\n        </option>\n      );\n    }\n    return options;\n  }\n\n  generatesBlocks = () => {\n    let rows = [];\n    let count = 0;\n    for (let row = 0; row < 3; row++) {\n      let columns = [];\n      for (let column = 0; column < 2; column++) {\n        columns.push(\n          <td className=\"text-center\" key={count}>\n            <button\n              className=\"btn btn-success\"\n              onClick={this.selectBlock}\n              id={blockStyles[count][\"name\"]}\n            >\n              {blockStyles[count][\"name\"]}\n            </button>\n          </td>\n        );\n        count++;\n      }\n      rows.push(<tr key={row}>{columns}</tr>);\n    }\n    return rows;\n  };\n\n  generateEmptyMap() {\n    let rows = [];\n    for (let y = 0; y < 20; y++) {\n      let columns = [];\n      for (let x = 0; x < 20; x++) {\n        columns.push(0);\n      }\n      rows.push(columns);\n    }\n    this.setState({ drawMap: rows });\n  }\n\n  selectBlock = (e) => {\n    this.setState({ blockType: e.target.id });\n  };\n\n  definePoints(e) {}\n\n  setLane = (e) => {\n    this.setState({ laneNumber: e.target.value });\n    let lane = {},\n      lanes = [];\n    lanes.number = e.target.value;\n    lanes.blokcs = 0;\n    lanes.push({ path: lane });\n    this.setState({ lanes: { path: lane } });\n    console.log(this.state.lanes);\n  };\n\n  drawPath = (e) => {\n    let row = parseInt(e.target.id.charAt(0));\n    let column = parseInt(e.target.id.charAt(1));\n\n    let newMap = this.state.drawMap;\n\n    if (\n      this.state.blockType === \"Straight\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      e.target.style.backgroundColor = \"#607d8b\";\n      e.target.style.border = \"none\";\n      e.target.style.borderRadius = squareStyles[\"straight\"];\n      document.getElementById(e.target.id).innerHTML = \"1\";\n      newMap[row][column] = 1;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (this.state.blockType === \"Delete\") {\n      e.target.style.backgroundColor = \"#fff\";\n      e.target.style.border = \"1px doted #585858\";\n      e.target.style.borderRadius = squareStyles[\"delete\"];\n      document.getElementById(e.target.id).innerHTML = \"\";\n      newMap[row][column] = 0;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks += 1) });\n    } else if (\n      this.state.blockType === \"Top Left\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      e.target.style.backgroundColor = \"#607d8b\";\n      e.target.style.border = \"none\";\n      e.target.style.borderRadius = squareStyles[\"topLeft\"];\n      newMap[row][column] = 2;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Top Right\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      e.target.style.backgroundColor = \"#607d8b\";\n      e.target.style.border = \"none\";\n      e.target.style.borderRadius = squareStyles[\"topRight\"];\n      newMap[row][column] = 3;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Bottom Left\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      e.target.style.backgroundColor = \"#607d8b\";\n      e.target.style.border = \"none\";\n      e.target.style.borderRadius = squareStyles[\"bottomLeft\"];\n      newMap[row][column] = 4;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    } else if (\n      this.state.blockType === \"Bottom Right\" &&\n      this.state.remainingBlocks >= 1\n    ) {\n      e.target.style.backgroundColor = \"#607d8b\";\n      e.target.style.border = \"none\";\n      e.target.style.borderRadius = squareStyles[\"bottomRight\"];\n      newMap[row][column] = 5;\n      this.setState({ remainingBlocks: (this.state.remainingBlocks -= 1) });\n    }\n\n    this.setState({ drawMap: newMap });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"card\">\n            <div className=\"card-header\">Drawing Tool</div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"row\">\n                    <div className=\"col-8\">\n                      <table className=\"drawing-table\">\n                        <tbody>{this.generateTileMap()}</tbody>\n                      </table>\n                    </div>\n                    <div className=\"col-4\">\n                      <div className=\"form-group row\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 col-form-label\"\n                        >\n                          Lane Number\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"point-name\"\n                            onChange={this.setLane}\n                          >\n                            <option value={\"\"} selected={\"\"} default={\"\"}>\n                              Select lane number\n                            </option>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 col-form-label\"\n                        >\n                          Cars per lane\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"point-name\"\n                            onChange={(e) =>\n                              this.setState({ remainingBlocks: e.target.value })\n                            }\n                          >\n                            <option value={\"\"} selected={\"\"} default={\"\"}>\n                              Select number of cars per lane\n                            </option>\n                            {this.carsPerLane()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\">\n                          Lane Type\n                        </label>\n                        <div className=\"col-sm-8\">\n                          <select className=\"form-control\" name=\"point-name\">\n                            <option value={\"\"} selected={\"\"} default={\"\"}>\n                              Select lane type\n                            </option>\n                            <option value={1}>Separate Entry/Exit</option>\n                            <option value={2}>\n                              Separate Entry, Common Exit\n                            </option>\n                            <option value={3}>\n                              Common Entry, Separate Exit\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <table className=\"table table-bordered justify-content-center block-table\">\n                            <tbody>{this.generatesBlocks()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <button className=\"btn btn-primary btn-block save-path\">\n                            Save {this.state.setLane}\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 font-weight-bold\"\n                        >\n                          Remaining Blocks\n                        </label>\n                        <div className=\"col-sm-8 font-weight-bold\">\n                          {this.state.remainingBlocks}\n                        </div>\n                      </div>\n\n                      <div className=\"row mt-4\">\n                        <label\n                          htmlFor=\"staticEmail\"\n                          className=\"col-sm-4 font-weight-bold\"\n                        >\n                          Merge Points\n                        </label>\n                        <div className=\"col-sm-8 font-weight-bold\">\n                          {this.state.remainingBlocks}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*point select modal*/}\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <Modal.Title>Select point</Modal.Title>\n          </Modal.Header>\n          <form>\n            <Modal.Body>\n              <div className=\"form-group row\">\n                <label\n                  htmlFor=\"staticEmail\"\n                  className=\"col-sm-4 col-form-label\"\n                >\n                  Point Name\n                </label>\n                <div className=\"col-sm-8\">\n                  <select\n                    className=\"form-control\"\n                    name=\"point-name\"\n                    onChange={(e) => this.setState({ point: e.target.value })}\n                  >\n                    <option Value=\"\" selected default>\n                      Select point\n                    </option>\n                    <option value=\"0\">Arrival</option>\n                    <option value=\"1\">Menu</option>\n                    <option value=\"2\">Cashier</option>\n                    <option value=\"3\">Pickup</option>\n                  </select>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"secondary\"\n                onClick={() => this.setState({ show: false })}\n              >\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.definePoints}>\n                Add\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default DrawingTool;\n"]},"metadata":{},"sourceType":"module"}